AWSTemplateFormatVersion: "2010-09-09"
Description: MyF0t0 environment setup
Parameters:
  OldPhotoBucketName:
    Type: String
    Description: Enter the Name of an existing S3 bucket that will house photos and thumbnails.  Leave blank to create a new bucket.
    Default: ""
Conditions:
  NewBucket: !Equals [!Ref OldPhotoBucketName, ""]
Resources:
  ProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join ["-", [!Ref AWS::StackName, "ProcessingQueue"]]
  ProcessingQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ProcessingQueue
      PolicyDocument:
        Statement:
          -
            Action:
              - "SQS:SendMessage"
            Effect: "Allow"
            Resource: !GetAtt ProcessingQueue.Arn
            Principal:
              AWS: "*"

  PhotoBucket:
    Type: AWS::S3::Bucket
    Condition: NewBucket
    DependsOn: ProcessingQueue
    Properties:
      AccessControl: PublicRead
      NotificationConfiguration:
        QueueConfigurations:
          -
            Event: s3:ObjectCreated:*
            Queue: !GetAtt ProcessingQueue.Arn
  AppBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  MetadataDb:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "PhotoKey"
          AttributeType: "S"
        -
          AttributeName: "CreationDate"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "PhotoKey"
          KeyType: "HASH"
        -
          AttributeName: "CreationDate"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Description: "Execution role for MyF0t0 Lambda functions."
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  LambdaExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - !GetAtt PhotoBucket.Arn
              - !Join ["", [!GetAtt PhotoBucket.Arn, "/*"]]
          - Effect: Allow
            Action:
              - 'dynamodb:*'
            Resource:
              - !GetAtt MetadataDb.Arn
          - Effect: Allow
            Action:
              - 'sqs:ReceiveMessage'
              - 'sqs:DeleteMessage'
              - 'sqs:GetQueueAttributes'
            Resource: !GetAtt ProcessingQueue.Arn
      PolicyName: !Join ["-", [ !Ref AWS::StackName, "lambda-execution"] ]
      Roles:
        - !Ref LambdaRole
  ProcessingFunction:
    Type: AWS::Lambda::Function
    DependsOn: LambdaExecutionPolicy
    Properties:
      Code:
        S3Bucket: myf0t0dist
        S3Key: photo-processor.zip
      Description: Event-driven photo processor
      Environment:
        Variables:
          db_arn: !Ref MetadataDb
          photo_bucket: !Ref PhotoBucket
      Handler: photo-processor.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.6
      Timeout: 30
  ProcessingFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeLambda
      FunctionName: !Ref ProcessingFunction
      Principal: sqs.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt ProcessingQueue.Arn
  ProcessingEventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt ProcessingQueue.Arn
      FunctionName: !Ref ProcessingFunction
  ApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: myf0t0dist
        S3Key: api.zip
      Description: MyF0t0 API backend
      Environment:
        Variables:
          db_arn: !Ref MetadataDb
          photo_bucket: !Ref PhotoBucket
      Handler: app.app
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.6
